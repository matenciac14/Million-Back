# Real Estate API - Complete CRUD Operations Tests
# Updated with PropertyImage Management Endpoints

## ===========================================
## CLOUDINARY IMAGE OPERATIONS CRUD TESTS  
## ===========================================

### Variables
@baseUrl = http://localhost:5179/api
@httpsBaseUrl = https://localhost:7007/api
@imageUrl = {{baseUrl}}/Image

### 1. Upload Single Image - READY TO TEST
POST {{imageUrl}}/upload?folder=real-estate/properties
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test-house.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 2. Upload Multiple Images
POST {{imageUrl}}/upload-multiple?folder=real-estate/properties
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="files"; filename="house1.jpg"
Content-Type: image/jpeg

< ./sample-images/house1.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="files"; filename="house2.jpg"
Content-Type: image/jpeg

< ./sample-images/house2.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 3. Generate Optimized Image URL
GET {{imageUrl}}/url/sample-public-id
?width=800
&height=600
&format=webp

### 4. Get Responsive Image URLs
GET {{imageUrl}}/responsive/sample-public-id

### 5. Delete Image
DELETE {{imageUrl}}/sample-public-id

## ===========================================
## PROPERTY WITH IMAGES CRUD TESTS
## ===========================================

### 6. Create Property with Image URL (from Cloudinary)
POST {{baseUrl}}/Property
Content-Type: application/json

{
  "name": "Casa Moderna con ImÃ¡genes",
  "address": "Carrera 15 #92-45, Zona Rosa",
  "price": 750000000,
  "idOwner": "64a1b2c3d4e5f6789012345",
  "codigoInternal": "PROP_IMG_001",
  "year": 2023,
  "image": "https://res.cloudinary.com/your-cloud/image/upload/v1234567890/real-estate/properties/house_sample.jpg",
  "city": "BogotÃ¡",
  "state": "Cundinamarca",
  "country": "Colombia"
}

### 7. Get Property with Image Details
GET {{baseUrl}}/Property/64a1b2c3d4e5f6789012999

### 8. Update Property Image
PUT {{baseUrl}}/Property/64a1b2c3d4e5f6789012999
Content-Type: application/json

{
  "image": "https://res.cloudinary.com/your-cloud/image/upload/v1234567890/real-estate/properties/updated_house.jpg"
}

## ===========================================
## OWNER CRUD OPERATIONS
## ===========================================

### 9. Create Owner
POST {{baseUrl}}/Owner
Content-Type: application/json

{
  "name": "MarÃ­a Elena",
  "lastName": "RodrÃ­guez Silva",
  "phone": "+57 301 555 7890",
  "email": "maria.rodriguez@email.com",
  "birthday": "1978-03-22T00:00:00Z"
}

### 10. Get All Owners
GET {{baseUrl}}/Owner

### 11. Search Owner by Name
GET {{baseUrl}}/Owner/search?name=MarÃ­a

## ===========================================
## PROPERTY ADVANCED FILTERS
## ===========================================

### 12. Search Properties with Filters
GET {{baseUrl}}/Property
?name=casa
&minPrice=500000000
&maxPrice=800000000
&city=bogotÃ¡
&page=1
&pageSize=5
&sortBy=price
&sortDirection=desc

### 13. Get Properties by Price Range
GET {{baseUrl}}/Property/price-range
?minPrice=600000000
&maxPrice=900000000

### 14. Get Properties by Owner
GET {{baseUrl}}/Property/owner/64a1b2c3d4e5f6789012345

## ===========================================
## PROPERTY IMAGE MANAGEMENT ENDPOINTS - NEW! ðŸ”¥
## ===========================================

### 15. Upload Image to Specific Property
POST {{imageUrl}}/property/PROPERTY_ID_HERE/upload?description=Fachada%20Principal&isMain=true
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="fachada.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 16. Upload Additional Images to Property
POST {{imageUrl}}/property/PROPERTY_ID_HERE/upload?description=Sala%20de%20Estar
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="sala.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 17. Get All Images for a Property
GET {{imageUrl}}/property/PROPERTY_ID_HERE

### 18. Get All Images for a Property (Including Disabled)
GET {{imageUrl}}/property/PROPERTY_ID_HERE?enabledOnly=false

### 19. Set Main Image for Property
PUT {{imageUrl}}/property/PROPERTY_ID_HERE/main/IMAGE_ID_HERE

### 20. Get Responsive URLs for Specific Property Image
GET {{imageUrl}}/property/PROPERTY_ID_HERE/image/IMAGE_ID_HERE/responsive

### 21. Delete Specific Property Image
DELETE {{imageUrl}}/property/PROPERTY_ID_HERE/image/IMAGE_ID_HERE

## ===========================================
## COMPLETE PROPERTY WITH MULTIPLE IMAGES WORKFLOW
## ===========================================

### 22. Complete Workflow: Owner â†’ Property â†’ Multiple Images
# Step 1: Create Owner
POST {{baseUrl}}/Owner
Content-Type: application/json

{
  "name": "Carlos Alberto",
  "lastName": "MÃ©ndez LÃ³pez",
  "phone": "+57 302 888 9999", 
  "email": "carlos.mendez@email.com",
  "birthday": "1985-07-15T00:00:00Z"
}

### 23. Create Property for the Owner
# Use the Owner ID from step 22
POST {{baseUrl}}/Property
Content-Type: application/json

{
  "name": "Apartamento de Lujo con Vista",
  "address": "Carrera 11 #93-45, Piso 25",
  "price": 1200000000,
  "idOwner": "OWNER_ID_FROM_STEP_22",
  "codigoInternal": "APT_LUX_001",
  "year": 2024,
  "city": "BogotÃ¡",
  "state": "Cundinamarca",
  "country": "Colombia"
}

### 24. Upload Main Image to Property
# Use Property ID from step 23
POST {{imageUrl}}/property/PROPERTY_ID_FROM_STEP_23/upload?description=Fachada%20Edificio&isMain=true
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="fachada-edificio.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 25. Upload Additional Images 
POST {{imageUrl}}/property/PROPERTY_ID_FROM_STEP_23/upload?description=Sala%20con%20Vista
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="sala-vista.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 26. Upload Third Image
POST {{imageUrl}}/property/PROPERTY_ID_FROM_STEP_23/upload?description=HabitaciÃ³n%20Principal
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="habitacion.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 27. Verify Property with All Images
GET {{baseUrl}}/Property/PROPERTY_ID_FROM_STEP_23

### 28. Get All Property Images with Responsive URLs
GET {{imageUrl}}/property/PROPERTY_ID_FROM_STEP_23

## ===========================================
## ERROR HANDLING TESTS
## ===========================================

### 29. Test Invalid File Upload
POST {{imageUrl}}/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="document.pdf"
Content-Type: application/pdf

< ./test-files/invalid-file.pdf
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 30. Test Large File Upload (should fail if > 10MB)
POST {{imageUrl}}/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="large-image.jpg"
Content-Type: image/jpeg

< ./test-files/large-image-15mb.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 31. Test Delete Non-existent Image
DELETE {{imageUrl}}/non-existent-public-id

### 32. Test Property Image Upload to Non-existent Property
POST {{imageUrl}}/property/000000000000000000000000/upload?description=Test
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test.jpg"
Content-Type: image/jpeg

< ./test-house.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 33. Test Invalid Property Creation
POST {{baseUrl}}/Property
Content-Type: application/json

{
  "name": "",
  "address": "",
  "price": -1000,
  "idOwner": "invalid-owner-id"
}

## ===========================================
## PERFORMANCE TESTS
## ===========================================

### 34. Bulk Property Search
GET {{baseUrl}}/Property
?page=1
&pageSize=50
&sortBy=createdAt
&sortDirection=desc

### 35. Multiple Image Sizes Generation
GET {{imageUrl}}/responsive/sample-public-id

### 36. Property with Images Performance Test
GET {{baseUrl}}/Property
?minPrice=100000000
&maxPrice=2000000000
&page=1
&pageSize=20

### 37. Property Image Management Performance
GET {{imageUrl}}/property/PROPERTY_ID_HERE